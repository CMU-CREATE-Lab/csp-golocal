<p style="color: green"><%= notice %></p>

<div class="container px-4">
  <br/>
  <p>GoLocal is a directory of local and minority-owned caterers for your next meeting or event, created by the Center for Shared Prosperity and based on suggestions from the CMU community. Scroll down to see our list of vendors.</p>
  <p>Don't forget to contact the <a href="mailto:university-contracts@andrew.cmu.edu">University Contracts Office</a> before you bring a food truck or caterer to campus for a full-service event.</p>
  <p>Is your favorite local place missing? Email the <a href="mailto:centerforsharedprosperity@gmail.com">Center for Shared Prosperity</a> to suggest a new vendor.</p>
</div>

<div class="container px-4" id="filter-options">
  <br/>
  <h3>Filter Options</h3>
  <div class="csp-search-keywords">
    <% @filter_keywords_to_display.each do |keyword, display| %>
    <a href="#"><span value="<%= keyword %>" class="badge"><%= display %></span></a>
    <% end %>
    <br/>
    <a id="csp-search-clear" href="#"><span id="csp2-search-clear" class="badge">â“§ Clear All</span></a>
  </div>
  <br/>
  <div class="csp-search-disclaimer">
    <p>
      <i><a href="https://www.cmu.edu/contracts/">University Contracts</a> review and approval is needed when bringing full service catering or a food truck to campus. See this <a href="https://drive.google.com/file/d/1thqLPw7877Q0jA0PV1pqgwGGyaU4F6gd/view?usp=drive_link">handy guide from UCO</a> on what they review for catering and dining services.</i>
    </p>
  </div>
  <br/>
  <br/>
</div>
<br/>
<div class="container px-4" id="business3-list-header">
  <br/>
  <br/>
  <h2>Businesses</h2>
  <hr/>
  <br/>
  <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 gx-5 gy-5">
    <% @businesses.each do |business| %>
    <div class="col">
          <a style="display:block; color: inherit; text-decoration: inherit;" href="/businesses/<%=business.id%>">
              <div class="p-3 border bg-light">
                <img src="<%= (business.featured_image.blank? ? (business.logo.blank? ? "" : url_for(business.logo)) : url_for(business.featured_image)) %>" alt="<%=business.name%>" style="width:100%; height:250px; object-fit: cover;" />
                <h3><%= business.name %></h3>
                <div class="headline-description">
                  <%= image_tag business.is_food_truck ? "/assets/food-truck.png" : "", title: "This Business operates as a Food Truck" %>
                  <%= image_tag business.is_on_campus ? "/assets/on-campus.png" : "", title: "This Business is located on CMU campus" %>
                </div>
                <div class="headline-description">
                  <%= business.headline_description %>
                </div>
                <div class="csp-index-category"><p>Dietary Restrictions: <span><%= business.generate_span_text_for_dietary_restrictions %></span></p></div>
                <div class="csp-index-category"><p>Catering Options: <span><%= business.generate_span_text_for_catering_options %></span></p></div>
                <div class="csp-index-category"><p>Event Sizes: <span><%= business.generate_span_text_for_event_sizes %></span></p></div>
                <div class="csp-index-keywords nodisplay">
                  <% business.generate_keywords_for_filter.each do |keyword| %>
                    <span value="<%= keyword %>" class="badge"><%= @filter_keywords_to_display[keyword.to_sym] %></span>
                  <% end %>
                </div>
              </div>
          </a>
    </div>
    <% end %>
  </div>
</div>

<div class="container px-4" id="business2-list-header">
  <br/>
  <br/>
  <h2>Filtered Results</h2>
  <hr/>
  <br/>
  <div id="business2-list" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 gx-5 gy-5">
    <!-- script: populateViews() -->
  </div>
</div>
<div class="container px-4" id="business-list-header">
  <br/>
  <br/>
  <h2>All Businesses</h2>
  <hr/>
  <br/>
  <div id="business-list" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 gx-5 gy-5">
    <!-- script: populateViews() -->
  </div>
</div>


<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>

<% if logged_in? and can? :create, Business %>
<%= link_to "Create new", new_business_path %>
<% end %>


<script>

// JSON Array representing each business and its fields (to display on list)
var js_businesses = <%= raw @js_businesses %>;

// JSON Object that maps keyword identifiers to their display names
var js_filter_keywords_to_display = <%= raw @js_filter_keywords_to_display %>;

// array of keywords;
var keywordsSelected = [];

// seed for randomizing the position of businesses that share the same number of keywords
var today = new Date();
var randomSeed = ""+today.getDate()+today.getMonth()+today.getYear();

var listFiltered = [];
var listAll = [];


// helper functions

function updateKeywordsSelected() {
  // https://api.jquery.com/map/
  keywordsSelected = $("div.csp-search-keywords span.keywords-selected").map(function() {
    return $(this).attr("value");
  }).get();
}

function intersectArray(array1, array2) {
  // https://stackoverflow.com/questions/1885557/simplest-code-for-array-intersection-in-javascript
  return array1.filter(value => array2.includes(value));
}

// find all items in array1 that are NOT in array2
function componentArray(array1, array2) {
  var result = [];
  array1.forEach(function(item) {
    if (!(array2.includes(item))) {
      result.push(item);
    }
  });
  return result;
}

function intersectArrayWithKeywords(array, keywords) {
  var result = [];
  array.forEach(function (item) {
    for (i=0; i<keywords.length; i++) {
      if (!(item.keywords.includes(keywords[i]))) {
        return;
      }
    }
    result.push(item);
  });
  return result;
}

function trulyRandomCompare() {
  return Math.floor(Math.random()*3) - 1;
}

function randomCompare(a, b, seed) {
  // compare based on length of string (either 0 or 1)
  // NOTE: this function does not mathematically guarantee the same sorting for all permutations of a given Array
  var x = (a.length + seed) % 2;
  var y = (b.length + seed) % 2;
  return x-y;
}

function ascendingCompare(a, b) {
  return a.localeCompare(b);
}

function generateSortFunctionWithAscendingNames(keywords) {
  return (function(a, b) {
    // #-matching-keywords in descending order
    var s1 = (intersectArray(keywords, b.keywords).length - intersectArray(keywords, a.keywords).length);
    // Name in ascending order (i.e. A-Z)
    var s2 = ascendingCompare(a.name, b.name);
    return (2 * s1) + s2;
  });
}

function generateSortFunctionWithRandomSeed(seed) {
  return (function(a, b) {
    var s2 = randomCompare(a.name, b.name, seed);
    //var s2 = trulyRandomCompare();
    return s2;
  });
}

function generateSortFunctionWithRandomSeed_AndKeywords(keywords, seed) {
  return (function(a, b) {
    // #-matching-keywords in descending order
    var s1 = (intersectArray(keywords, b.keywords).length - intersectArray(keywords, a.keywords).length);
    // intermediate function: takes 2 names and random Seed (today's Date) as input, outputs value to use for s2
    // TODO Q: must this be transitive? because you may end up having A < B, B < C, and not A < C
    var s2 = randomCompare(a.name, b.name, seed);
    //var s2 = trulyRandomCompare();
    return (2 * s1) + s2;
  });
}

// returns a function (i.e. compareFunction) that is passed into the sort() function.
function generateSortFunction(keywords) {
  //// NOTE: choose one

  // // sort function with ascending names for businesses with the same number of keywords
  // return generateSortFunctionWithAscendingNames(keywords);

  // sort function with randomized position for busineses with the same number of keywords
  return generateSortFunctionWithRandomSeed(keywords, parseInt(randomSeed));
}

function generateSortFunctionNoKeywords() {
  return generateSortFunctionWithRandomSeed(parseInt(randomSeed));
}


// DOM manipulation functions

function createDivForBusinessWithOpacity(business, withOpacity) {
  // see "Creating New Elements": https://api.jquery.com/jQuery/#jQuery2
  var divCol = (withOpacity) ? $("<div class=\"col\" style=\"opacity:0.5;\" />") : $("<div class=\"col\" />");
  var aLink = $('<a style="display:block; color: inherit; text-decoration: inherit;" href="'+business.link+'" />');
  var div2 = $('<div class="p-3 border bg-light" />');
  var urlfor_image = !(business.featured_image) ? business.logo : business.featured_image;
  var img = $('<img src="'+urlfor_image+'" alt="'+business.name+'" style="width:100%; height:250px; object-fit: contain;" />');
  var h3 = $('<h3>'+business.name+'</h3>');
  var divIndicators = $('<div class="headline-description">'+(!(business.is_food_truck) ? "" : "<img src='/assets/food-truck.png' title='This Business operates as a Food Truck'/>")+(!(business.is_on_campus) ? "" : "<img src='/assets/on-campus.png' title='This Business is located on CMU campus'/>")+'</div>');
  var divHeadline = $('<div class="headline-description">'+business.headline_description+'</div>');
  var divCategories = $('<div class="csp-index-category"><p>Dietary Restrictions: <span>'+business.span_text_for_dietary_restrictions+'</span></p></div><div class="csp-index-category"><p>Catering Options: <span>'+business.span_text_for_catering_options+'</span></p></div><div class="csp-index-category"><p>Event Sizes: <span>'+business.span_text_for_event_sizes+'</span></p></div>');
  var divKeywords = $('<div class="csp-index-keywords nodisplay" />');

  var listSpans = business.keywords.map( function(item) {
    var display = js_filter_keywords_to_display[item];
    var classesForCss = keywordsSelected.includes(item) ? " keywords-selected" : "";
    return $('<span value="'+item+'" class="badge'+classesForCss+'">'+display+'</span>');
  });

  // construction
  listSpans.forEach(function(item) {
    divKeywords.append(item);
  });
  div2.append(img);
  div2.append(h3);
  div2.append(divIndicators);
  div2.append(divHeadline);
  div2.append(divCategories);
  div2.append(divKeywords);
  aLink.append(div2);
  divCol.append(aLink);

  return divCol;
}

function createDivForBusiness(business) {
  // see "Creating New Elements": https://api.jquery.com/jQuery/#jQuery2
  var divCol = $("<div class=\"col\" />");
  var aLink = $('<a style="display:block; color: inherit; text-decoration: inherit;" href="'+business.link+'" />');
  var div2 = $('<div class="p-3 border bg-light" />');
  var urlfor_image = !(business.featured_image) ? business.logo : business.featured_image;
  var img = $('<img src="'+urlfor_image+'" alt="'+business.name+'" style="width:100%; height:250px; object-fit: cover;" />');
  var h3 = $('<h3>'+business.name+'</h3>');
  var divIndicators = $('<div class="headline-description">'+(!(business.is_food_truck) ? "" : "<img src='/assets/food-truck.png' title='This Business operates as a Food Truck'/>")+(!(business.is_on_campus) ? "" : "<img src='/assets/on-campus.png' title='This Business is located on CMU campus'/>")+'</div>');
  var divHeadline = $('<div class="headline-description">'+business.headline_description+'</div>');
  var divCategories = $('<div class="csp-index-category"><p>Dietary Restrictions: <span>'+business.span_text_for_dietary_restrictions+'</span></p></div><div class="csp-index-category"><p>Catering Options: <span>'+business.span_text_for_catering_options+'</span></p></div><div class="csp-index-category"><p>Event Sizes: <span>'+business.span_text_for_event_sizes+'</span></p></div>');
  var divKeywords = $('<div class="csp-index-keywords nodisplay" />');

  var listSpans = business.keywords.map( function(item) {
    var display = js_filter_keywords_to_display[item];
    var classesForCss = keywordsSelected.includes(item) ? " keywords-selected" : "";
    return $('<span value="'+item+'" class="badge'+classesForCss+'">'+display+'</span>');
  });

  // construction
  listSpans.forEach(function(item) {
    divKeywords.append(item);
  });
  div2.append(img);
  div2.append(h3);
  div2.append(divIndicators);
  div2.append(divHeadline);
  div2.append(divCategories);
  div2.append(divKeywords);
  aLink.append(div2);
  divCol.append(aLink);

  return divCol;
}

function businessListClear() {
  $("#business-list").children().remove();
  $("#business2-list").children().remove();
}

function businessListAppend(jsonArray, withOpacity) {
  if (jsonArray.length == 0) {
    $("#business-list-header").hide();
  } else {
    $("#business-list-header").show();
  }
  jsonArray.forEach(function(item) {
    // TODO call createDivForBusiness only once?
    // NOTE: alternatively you can jquery select keywords as $('span[value="offers_delivery"]')
    $("#business-list").append( createDivForBusinessWithOpacity(item, withOpacity) );
  });
}

function business2ListAppend(jsonArray) {
  if (jsonArray.length == 0) {
    $("#business2-list-header").hide();
  } else {
    $("#business2-list-header").show();
  }
  jsonArray.forEach(function(item) {
    // TODO call createDivForBusiness only once?
    // NOTE: alternatively you can jquery select keywords as $('span[value="offers_delivery"]')
    $("#business2-list").append( createDivForBusiness(item) );
  });
}

function populateViews(list1, list2) {
  businessListClear();
  if (list2.length == 0) {
    if (keywordsSelected.length == 0) {
      businessListAppend(list1, false);
      business2ListAppend(list2);
    } else {
      business2ListAppend(list1);
      businessListAppend([]);
    }
  } else {
    business2ListAppend(list1);
    businessListAppend(list2, true);
  }
}

function updateViewsFromKeywords() {
  var tempList = structuredClone(js_businesses);
  listFiltered = intersectArrayWithKeywords(tempList, keywordsSelected);
  listAll = componentArray(tempList, listFiltered);
  populateViews(listFiltered.sort(generateSortFunctionNoKeywords()), listAll.sort(generateSortFunctionNoKeywords()));
}


var filtersEnabled = false;
// document on-ready, listeners, initializers
window.onload = function () {
  $("#filter-options").hide();
  $("#business2-list-header").hide();
  $("#business-list-header").hide();
  $("div.csp-search-keywords a:not(#csp-search-clear)").on("click", function(event) {
    if (filtersEnabled) {
      var target = event.target;
      $(target).toggleClass("keywords-selected");
      //console.log("Toggle keyword: " + target.textContent + ", value=" + $(target).attr("value"));
      updateKeywordsSelected();
      updateViewsFromKeywords();
    }
  });
  $("#csp-search-clear").on("click", function(event) {
    $("div.csp-search-keywords span").removeClass("keywords-selected");
    keywordsSelected = [];
    updateViewsFromKeywords();
  });

  // ASSERT: no filters selected on page load
  //populateViews(js_businesses);
  updateViewsFromKeywords();

  filtersEnabled = true;
  $("#filter-options").show();
  $("#business3-list-header").hide();
};

</script>
